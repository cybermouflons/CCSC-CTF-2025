ARG DENO_VERSION=2.2.3
ARG TARGETARCH=x86_64


FROM buildpack-deps:20.04-curl AS download

RUN export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y unzip \
  && rm -rf /var/lib/apt/lists/*

ARG DENO_VERSION
ARG TARGETARCH
ENV DENO_VERSION=${DENO_VERSION}
ENV TARGETARCH=${TARGETARCH}

RUN echo curl -fsSL https://dl.deno.land/release/v${DENO_VERSION}/deno-$(echo $TARGETARCH | sed -e 's/arm64/aarch64/' -e 's/amd64/x86_64/')-unknown-linux-gnu.zip
RUN curl -fsSL https://dl.deno.land/release/v${DENO_VERSION}/deno-$(echo $TARGETARCH | sed -e 's/arm64/aarch64/' -e 's/amd64/x86_64/')-unknown-linux-gnu.zip \
    --output deno.zip \
  && unzip deno.zip \
  && rm deno.zip \
  && chmod 755 deno


FROM scratch AS bin

ARG DENO_VERSION
ENV DENO_VERSION=${DENO_VERSION}

COPY --from=download /deno /deno


FROM gcr.io/distroless/cc-debian12 AS cc

FROM alpine:3.17

COPY --from=cc --chown=root:root /lib/*-linux-gnu/* /usr/local/lib/
#COPY --from=cc --chown=root:root /lib/ld-linux-* /lib/
RUN chmod 755 /usr/local/lib/*

RUN addgroup --gid 1000 deno \
  && adduser --uid 1000 --disabled-password deno --ingroup deno \
  && mkdir /deno-dir/ \
  && chown deno:deno /deno-dir/ \
  && mkdir /lib64 \
  && ln -s /usr/local/lib/ld-linux-* /lib64/

ENV LD_LIBRARY_PATH="/usr/lib:/usr/local/lib"
ENV DENO_DIR=/deno-dir/
ENV DENO_INSTALL_ROOT=/usr/local

ARG DENO_VERSION
ENV DENO_VERSION=${DENO_VERSION}
COPY --from=bin /deno /bin/deno

RUN apk add --no-cache fontconfig ttf-dejavu ttf-liberation ttf-freefont rsvg-convert

WORKDIR /app
COPY ./app .
COPY ./flag.txt ./flag.txt

RUN mkdir -p output static/memes

EXPOSE 8000
CMD ["deno", "run", "--allow-net", "--allow-read", "--allow-run", "--allow-write", "server.ts"]
